<?php
// О ПРОБЛЕМАХ
// - После трима строки она может заканчиваться не словами, а отдельно стоящими символами, например дефиз, цифра
// или отдельная буква ( - 1 и ). Решить проблему можно проверкой 'слов' на количество символов.
// - На входе, теоретически может быть текст менее чем 180 символов, что приведет к некорректному отображению.
// Можно добавить проверку strlen, что бы исключить нежелательный результат. Например в данной реализации, в случаее
// получения на входе текста меньше чем 180 символов, многоточие в конце добавляться не будет.

$a = 'PHP имеет всего одну структуру данных для управления всем. array — сложный, гибкий, гибридный, сочетает в себе поведение list и linked map. Но мы используем его для всего, потому что PHP придерживается прагматичного подхода: иметь предельно правильный, здравый и реалистичный способ решения проблемы, исходящий из практических, а не теоретических рассуждений. array позволяет делать работу, хотя о нем и так много рассказывают на лекциях по информатике. Но, к сожалению, с гибкостью приходит и сложность. Последний релиз PHP вызвал большое оживление в сообществе. Мы не могли дождаться того, чтобы начать использовать новые возможности и почувствовать вкус ~2х прироста производительности. Одна из причин, почему это случилось — структура array была переработана. Но массивы все также придерживаются принципа «оптимизировано для всего; оптимизировано для ничего», еще не все идеально, есть возможности для совершенствования.';
$link = 'ССЫЛКА';

function trimNews($str, $lnk){
    $aTrim = mb_strimwidth($str, 0, 180, '...');                        //обрезаем строку на 180 символов и добавляем многоточие;
    $aExp = explode(' ', $aTrim);                                       //преобразуем строку в массив(делим на "слова");
    $aNumStr = count($aExp);                                            //считаем общее кол-во слов;
    $aExp[$aNumStr-2] = "<a href=".$lnk.">".$aExp[$aNumStr-2];          //Предпоследнему и последнему
    $aExp[$aNumStr-1] = $aExp[$aNumStr-1]."</a>";                       //элементу массива дописываем ссылку;
    $bTrim = implode(' ', $aExp);                                       //Собираем массив обратно в строку в $b;
    return $bTrim;
}
$b = trimNews($a, $link);
?>



<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <?php echo $b; ?>
</body>
</html>